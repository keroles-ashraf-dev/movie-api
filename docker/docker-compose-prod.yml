services:
  nginx:
    container_name: nginx_container
    image: nginx:stable-alpine
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
  app:
    build:
      context: .
      target: prod
    env_file:
      - .env
    ports:
      - ${API_PORT}:${API_PORT}
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
  postgres:
    container_name: postgres_container
    image: postgres:15.5
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - app_postgres_vol:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
  redis:
    container_name: redis_container
    image: redis:7.2.4-alpine3.19
    restart: always
    env_file:
      - .env
    environment:
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - app_redis_vol:/var/lib/redis
      - app_redis_config_vol:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - backend
    command: redis-server --save 20 1 --loglevel warning

networks:
  backend:

volumes:
  app_postgres_vol:
  app_redis_vol:
  app_redis_config_vol: